version: "3.9"

services:
  portainer_agent:
    image: portainer/agent:2.19.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer_agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: dcm-portainer:latest
    build:
      context: .
      dockerfile: dockerfile

    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - portainer_agent_network
      - swarm
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.dcm-infrastructure-portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.dcm-infrastructure-portainer.entrypoints=web"
        - "traefik.http.routers.dcm-infrastructure-portainer.rule=Host(`portainer.localhost`)"

    # deploy:
    #   labels:
    #     - "traefik.enable=true"
    #     - "traefik.http.services.dcm-infrastructure-proxy.loadbalancer.server.port=8080"
    #     - "traefik.http.routers.dcm-infrastructure-proxy.entrypoints=web"
    #     - "traefik.http.routers.dcm-infrastructure-proxy.rule=Host(`proxy.localhost`)"

    # networks:
    #   - swarm

    # volumes:
    #   - "/var/run/docker.sock:/var/run/docker.sock:ro"

networks:
  swarm:
    name: swarm
    external: true

  portainer_agent_network:
    driver: overlay
    attachable: true

volumes:
  portainer_data:
    driver: local
